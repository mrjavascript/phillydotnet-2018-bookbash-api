buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/libs-release" }
    }
    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.7.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
war {
    archiveName = 'dini.war'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/libs-release" }
}

sourceSets {
    main {
        java {
            srcDir "src/main/java"
        }
    }
}

configurations {
    provided
    compile.extendsFrom provided
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {

    /*
        SPRING
     */

    testCompile("org.springframework.boot:spring-boot-starter-test")

    // tag::tomcat[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-jetty"
    }
    compile("org.springframework.boot:spring-boot-starter-tomcat")
    // end::tomcat[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-batch")
    compile("org.springframework.boot:spring-boot-devtools")
    // end::actuator[]

    /*
        SPRING DATA COMMONS
     */

    // https://mvnrepository.com/artifact/org.springframework.data/spring-data-commons
    compile group: 'org.springframework.data', name: 'spring-data-commons', version: '1.13.7.RELEASE'

    /*
        SPRING CONTEXT SUPPORT
     */

    // https://mvnrepository.com/artifact/org.springframework/spring-context-support
    compile group: 'org.springframework', name: 'spring-context-support', version: '4.3.11.RELEASE'

    /*
        JUNIT
     */

    testCompile("junit:junit")

}
