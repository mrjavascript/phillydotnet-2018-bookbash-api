buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/libs-release" }
    }
    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.7.RELEASE")
        classpath 'com.bmuschko:gradle-cargo-plugin:2.2.3'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'com.bmuschko.cargo-base'
apply plugin: 'org.springframework.boot'
apply plugin: "jacoco"
jar {
    baseName = 'bookbash'
    version = '0.1.0'
}
apply plugin: 'war'
war {
    archiveName = 'bookbash.war'
}

// Custom JAXB bindings
apply from: 'xjc.gradle'

// External Gradle scripts
apply from: 'pojogen.gradle'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/libs-release" }
}

ext {
    generatedSourcesDir = file("${buildDir}/generated-sources")
    pojogenGeneratedDir = file("src/pojogen")
}

sourceSets {
    main {
        java {
            srcDir "src/main/java"
            srcDir pojogenGeneratedDir
            srcDir generatedSourcesDir
        }
    }
}

configurations {
    jaxb
    generate
    querydslapt
    provided
    compile.extendsFrom provided
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.querydslapt
    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = generatedSourcesDir
}

compileJava {
    doFirst {
        generatedSourcesDir.mkdirs();
    }
    options.compilerArgs += ['-s', generatedSourcesDir]

    dependsOn generateQueryDSL
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {

    /*
        SPRING
     */

    testCompile("org.springframework.boot:spring-boot-starter-test")

    // tag::tomcat[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-jetty"
    }
    compile "org.springframework.boot:spring-boot-starter-web-services"
    compile("org.springframework.boot:spring-boot-starter-tomcat")
    // end::tomcat[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-batch")
    compile("org.springframework.boot:spring-boot-devtools")
    compile "org.springframework.ws:spring-ws-core"
    // end::actuator[]

    //
    // JAXB/WSDL TO JAVA
    generate 'com.sun.xml.ws:jaxws-rt:2.2.10'
    generate 'com.sun.xml.ws:jaxws-tools:2.2.10'
    compile 'wsdl4j:wsdl4j:1.6.3'

    /*
        SPRING DATA COMMONS
     */

    // https://mvnrepository.com/artifact/org.springframework.data/spring-data-commons
    compile group: 'org.springframework.data', name: 'spring-data-commons', version: '1.13.7.RELEASE'

    /*
        SPRING CONTEXT SUPPORT
     */

    // https://mvnrepository.com/artifact/org.springframework/spring-context-support
    compile group: 'org.springframework', name: 'spring-context-support', version: '4.3.11.RELEASE'

    /*
        SPRING WEB
     */
    // https://mvnrepository.com/artifact/org.springframework/spring-web
    compile group: 'org.springframework', name: 'spring-web', version: '4.3.11.RELEASE'

    /*
        APACHE COMMONS
     */

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'

    /*
        APACHE SHIHO
     */

    // https://mvnrepository.com/artifact/org.apache.shiro/shiro-core
    compile group: 'org.apache.shiro', name: 'shiro-core', version: '1.4.0'

    /*
        GOOGLE GUAVA
     */

    // https://mvnrepository.com/artifact/com.google.guava/guava
    compile group: 'com.google.guava', name: 'guava', version: '22.0'

    /*
        LOGBACK
     */

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    /*
        Thymeleaf
     */

    // https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf
    compile group: 'org.thymeleaf', name: 'thymeleaf', version: '3.0.6.RELEASE'

    // https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring4
    compile group: 'org.thymeleaf', name: 'thymeleaf-spring4', version: '3.0.6.RELEASE'

    /*
        HIBERNATE / EHCACHE
     */

    // https://mvnrepository.com/artifact/org.hibernate/hibernate-core
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.2.11.Final'

    // https://mvnrepository.com/artifact/org.hibernate/hibernate-ehcache
    compile group: 'org.hibernate', name: 'hibernate-ehcache', version: '5.2.11.Final'

    // https://mvnrepository.com/artifact/org.hibernate/hibernate-entitymanager
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.2.11.Final'

    // https://mvnrepository.com/artifact/org.ehcache/ehcache
    compile group: 'org.ehcache', name: 'ehcache', version: '3.4.0'

    // https://mvnrepository.com/artifact/org.hibernate/hibernate-validator
    compile group: 'org.hibernate', name: 'hibernate-validator', version: '5.4.1.Final'

    /*
        MOCKITO
     */

    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.8.47'

    /*
        POSTGRES
     */

    // https://mvnrepository.com/artifact/org.eclipse.persistence/javax.persistence
    compile group: 'org.eclipse.persistence', name: 'javax.persistence', version: '2.2.0'

    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    compile group: 'org.postgresql', name: 'postgresql', version: '42.1.4'

    // https://mvnrepository.com/artifact/com.zaxxer/HikariCP
    compile group: 'com.zaxxer', name: 'HikariCP', version: '2.7.1'

    /*
        QUERYDSL
     */

    // https://mvnrepository.com/artifact/com.querydsl/querydsl-core
    compile group: 'com.querydsl', name: 'querydsl-core', version: '4.1.4'

    // https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa
    compile group: 'com.querydsl', name: 'querydsl-jpa', version: '4.1.4'

    // https://mvnrepository.com/artifact/com.querydsl/querydsl-sql
    compile group: 'com.querydsl', name: 'querydsl-sql', version: '4.1.4'

    // https://mvnrepository.com/artifact/com.querydsl/querydsl-apt
    querydslapt group: 'com.querydsl', name: 'querydsl-apt', version: '4.1.4'

    /*
        JWT
     */

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.7.0'

    /*
        MAIL
     */

    // https://mvnrepository.com/artifact/javax.mail/javax.mail-api
    compile group: 'javax.mail', name: 'javax.mail-api', version: '1.6.0-rc2'

    // https://mvnrepository.com/artifact/com.sun.mail/javax.mail
    compile group: 'com.sun.mail', name: 'javax.mail', version: '1.6.0-rc2'

    /*
        SWAGGER
     */

    // https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'

    // https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'

    /*
        PASSWORD VALIDATOR
    */

    // https://mvnrepository.com/artifact/org.passay/passay
    compile group: 'org.passay', name: 'passay', version: '1.2.0'

    /*
        LOMBOK
     */

    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    provided group: 'org.projectlombok', name: 'lombok', version: '1.16.16'

    /*
        H2 (unit testing)
     */

    // https://mvnrepository.com/artifact/com.h2database/h2
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.196'

    /*
        JUNIT
     */

    testCompile("junit:junit")

    // https://mvnrepository.com/artifact/org.apache.ws.xmlschema/xmlschema-core
    compile group: 'org.apache.ws.xmlschema', name: 'xmlschema-core', version: '2.2.2'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'

    // JAXB classes
    compile(files(genAwsServiceJaxb.classesDir).builtBy(genAwsServiceJaxb))

}

task afterEclipseImport {
    dependsOn genAwsServiceJaxb
}

test {
    systemProperties 'property': 'value'
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

/*
    JaCoCo
 */
jacoco {
    toolVersion = "0.7.6.201602180812"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

/*
    Deployment
 */
import com.bmuschko.gradle.cargo.convention.Deployable
import com.bmuschko.gradle.cargo.tasks.remote.CargoRedeployRemote

class RemoteContainer {
    String name
    String hostname
    Integer port
    String username
    String password
    String context
}

// creates multiple tasks - crisp_dev-deployHqmfToTomcat, crisp_staging-deployHqmfToTomcat and ai_demo-deployHqmfToTomcat.  Properties for each
// environment are specified separately in tomcat.properties
def remoteContainers = [
        new RemoteContainer(name: 'dev', hostname: 'bookbash.no-ip.org', port: 5050,
                username: 'tomcat', password: 'mQwPB6E8Zg6RC7H', context: 'bookbash'),
]

remoteContainers.each { config ->
    task "${config.name}-deployApiToTomcat"(type: CargoRedeployRemote) {
        dependsOn war

        containerId = 'tomcat8x'
        protocol = 'http'
        hostname = config.hostname
        port = config.port as Integer
        username = config.username
        password = config.password
        deployables = [new Deployable(
                file: file("$buildDir/libs/bookbash.war"),
                context: config.context
        )]

    }
}
